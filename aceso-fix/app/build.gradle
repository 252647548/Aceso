apply plugin: 'com.android.application'
apply plugin: 'AcesoFix'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.mogujie.aceso.hotfix"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

Aceso {
    logLevel = 3
    //methodLevelFix为true时，需要在修的方法前加@FixMtd的注解
    methodLevelFix = true
    modifiedJar = getModifiedJar()
    acesoMapping = getAcesoMapping()
}

def getModifiedJar() {
    def jarName=null;
    if (buildTypeStr().contains("debug")) {
        jarName="combined.jar"
    }else{
        jarName="main.jar"
    }
    return project.rootProject.file("../aceso-demo/app/build/intermediates/aceso/instrument/full/${buildTypeStr()}/${jarName}").absolutePath
}

def getAcesoMapping() {
    return project.rootProject.file("../aceso-demo/app/build/intermediates/aceso/mapping/full/${buildTypeStr()}/mapping.txt").absolutePath
}

def buildTypeStr() {
    def buildType = ""
    project.gradle.getStartParameter().getTaskRequests().each { taskReq ->
        taskReq.args.each { arg ->
            if (arg.startsWith("aceso")) {
                buildType = (arg - "aceso").toLowerCase()
            }
        }
    }
    return buildType
}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')
}

project.afterEvaluate {
    File allClassesJar = null
    if (buildTypeStr().contains("debug")) {
        allClassesJar = project.rootProject.file("../aceso-demo/app/build/intermediates/aceso/merged/full/${buildTypeStr()}/combined.jar")
    } else {
        allClassesJar = project.rootProject.file("../aceso-demo/app/build/intermediates/aceso/merged/full/debug/combined.jar")
    }
    copy {
        from allClassesJar
        into new File(project.projectDir, "libs")
    }
}